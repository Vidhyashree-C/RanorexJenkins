///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace UltraEditAutomation
{
    public partial class ValidatingQuickFindDialogPosition
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

      public void ValidatePosition(Adapter editWindow, Adapter quickFind, int tolerance)
		{
		    try
		    {
		        // Get the location and size of the Edit Window
		        int editWindowX = editWindow.Element.ScreenLocation.X;
		        int editWindowY = editWindow.Element.ScreenLocation.Y;
		        int editWindowWidth = editWindow.Element.Size.Width;
		        int editWindowHeight = editWindow.Element.Size.Height;
		
		        
		
		        // Get the location of the Quick Find Dialog
		        int dialogX = quickFind.Element.ScreenLocation.X;
		        int dialogY = quickFind.Element.ScreenLocation.Y;
		        int dialogWidth = quickFind.Element.Size.Width;
		        int dialogHeight = quickFind.Element.Size.Height;
		
		        // Tolerance for right and top alignment (you can adjust this as needed)
		        int rightTolerance =tolerance;   // Right alignment tolerance
		        int topTolerance = tolerance;  // Top alignment tolerance
		
		        // Validate Right Edge Position (right-aligned with the Edit window)
		        bool isRightAligned = Math.Abs((dialogX + dialogWidth) - (editWindowX + editWindowWidth)) <= rightTolerance;
		
		        // Validate Top Edge Position (top-aligned with the Edit window)
		        bool isTopAligned = Math.Abs(dialogY -editWindowY) <= topTolerance;
		
		        // Overall Position Validation
		        if (isRightAligned && isTopAligned)
		        {
		            Report.Success("The Quick Find dialog is positioned at the top-right corner of the Edit window.");
		        }
		        else
		        {
		            Report.Failure("The Quick Find dialog is NOT positioned at the top-right corner of the Edit window.");
		            Report.Info($"Quick Find Dialog Position: X={dialogX}, Y={dialogY}, Width={dialogWidth}, Height={dialogHeight}");
		            Report.Info($"Edit1 Window Position: X={editWindowX}, Y={editWindowY}, Width={editWindowWidth}, Height={editWindowHeight}");
		        }
		    }
		    catch (Exception ex)
		    {
		        Report.Error($"Error occurred during validation: {ex.Message}");
		    }
		}

        





    }
}
