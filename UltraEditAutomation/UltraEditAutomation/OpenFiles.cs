///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace UltraEditAutomation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The OpenFiles recording.
    /// </summary>
    [TestModule("7a5ab324-ab0e-4bf2-bc8f-6fcc72fcf84e", ModuleType.Recording, 1)]
    public partial class OpenFiles : ITestModule
    {
        /// <summary>
        /// Holds an instance of the UltraEditAutomationRepository repository.
        /// </summary>
        public static UltraEditAutomationRepository repo = UltraEditAutomationRepository.Instance;

        static OpenFiles instance = new OpenFiles();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public OpenFiles()
        {
            StartAutprocessIDVar = "";
            filepath = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static OpenFiles Instance
        {
            get { return instance; }
        }

#region Variables

        string _StartAutprocessIDVar;

        /// <summary>
        /// Gets or sets the value of variable StartAutprocessIDVar.
        /// </summary>
        [TestVariable("4db6ac0c-d82f-4d0a-903b-bdf293b98f8a")]
        public string StartAutprocessIDVar
        {
            get { return _StartAutprocessIDVar; }
            set { _StartAutprocessIDVar = value; }
        }

        string _filepath;

        /// <summary>
        /// Gets or sets the value of variable filepath.
        /// </summary>
        [TestVariable("441f1fa0-a553-41a7-a573-fc10ce22e067")]
        public string filepath
        {
            get { return _filepath; }
            set { _filepath = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            StartAutprocessIDVar = ValueConverter.ToString(OpenFilesInUltraEdit(filepath));
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Invoke action", "(Optional Action)\r\nInvoking Close() on item 'TrialPeriodExpiring'.", repo.TrialPeriodExpiring.SelfInfo, new RecordItemIndex(1));
                repo.TrialPeriodExpiring.Self.Close();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Maximize() on item 'UltraEdit64Bit'.", repo.UltraEdit64Bit.SelfInfo, new RecordItemIndex(2));
            repo.UltraEdit64Bit.Self.Maximize();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
