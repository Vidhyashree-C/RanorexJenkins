///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace UltraEditAutomation
{
    public partial class VerifyEncodingValue
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void NavigateTabAndVerifyEncoding()
        {
			try
			    {
			        // Locate the TabPageList element in the repository
					var tabPageList = repo.FormCUltraEditFilesUe20241025T06120.PageTabList; // Adjust based on your repository naming
					        // Get all child tabs under the TabPageList
					var tabs = tabPageList.Children; // Retrieves all child elements (tabs)
			        // Iterate through all tabs
			        
					for (int i = 1; i < tabs.Count; i++)
			        {
			            // Click the tab to activate it
			            tabs[i].Click();
			            
			            // Locate the encoding element from the status bar
						var encodingElement = repo.FormCUltraEditFilesUe20241025T06120.Encoding;
						
			            // Extract the encoding text
			    		string encodingValue = encodingElement.TextValue;
			    		
			    		// Add a delay to ensure the tab is fully activated
			            Delay.Milliseconds(100);
			    		
			            // Log the tab activation
			            Report.Success($"File {i}.html clicked successfully.");
			            
			            // Log the extracted encoding
			            Report.Info($"Encoding: {encodingValue}");
			        }
			    }
			
			 catch (Exception ex)
			    {
			        Report.Error($"An error occurred while navigating tabs: {ex.Message}");
			    }
			 
       }

    }
}
