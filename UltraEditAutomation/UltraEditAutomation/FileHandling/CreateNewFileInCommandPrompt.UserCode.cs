///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Diagnostics; // For Process
using System.IO;         // For StreamWriter
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace UltraEditAutomation.FileHandling
{
    public partial class CreateNewFileInCommandPrompt
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void CommandPrompt()
        {
            try
            {
                // Step 1: Start Command Prompt
                Process cmdProcess = new Process();
                cmdProcess.StartInfo.FileName = "cmd.exe";
                cmdProcess.StartInfo.UseShellExecute = false;
                cmdProcess.StartInfo.RedirectStandardInput = true; // To send commands
                cmdProcess.StartInfo.RedirectStandardOutput = true; // To capture output (optional)
                cmdProcess.StartInfo.CreateNoWindow = false; // Show Command Prompt window
                cmdProcess.Start();
                
                Thread.Sleep(5000);

                // Step 2: Send the command to Command Prompt
                using (StreamWriter cmdInput = cmdProcess.StandardInput)
                {
                    if (cmdInput.BaseStream.CanWrite)
                    {
                        // Command to open UltraEdit with the specified file
                        cmdInput.WriteLine(@"uedit64 C:\temp\newfile.txt");
                        // Optional: Close Command Prompt after execution
                        //cmdInput.WriteLine("exit");
                    }
                }

                // Step 3: Wait for the process to complete
                cmdProcess.WaitForExit();

                // Log success message
                Report.Info("Command executed successfully: uedit64 C:\\temp\\newfile.txt");
            }
            catch (Exception ex)
            {
                // Log error in case of failure
                Report.Error("Error while automating Command Prompt: " + ex.Message);
            }
        }
    }
}
