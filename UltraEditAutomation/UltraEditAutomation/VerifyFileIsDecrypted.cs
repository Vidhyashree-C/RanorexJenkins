///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace UltraEditAutomation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The VerifyFileIsDecrypted recording.
    /// </summary>
    [TestModule("7b5efe65-4f67-48f1-a069-be48e7278b81", ModuleType.Recording, 1)]
    public partial class VerifyFileIsDecrypted : ITestModule
    {
        /// <summary>
        /// Holds an instance of the UltraEditAutomationRepository repository.
        /// </summary>
        public static UltraEditAutomationRepository repo = UltraEditAutomationRepository.Instance;

        static VerifyFileIsDecrypted instance = new VerifyFileIsDecrypted();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public VerifyFileIsDecrypted()
        {
            EncryptText = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static VerifyFileIsDecrypted Instance
        {
            get { return instance; }
        }

#region Variables

        string _EncryptText;

        /// <summary>
        /// Gets or sets the value of variable EncryptText.
        /// </summary>
        [TestVariable("bed49679-32f4-4dc9-bdfd-dbe588a6aade")]
        public string EncryptText
        {
            get { return _EncryptText; }
            set { _EncryptText = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'UltraEdit.UltraEdit'.", repo.UltraEdit.UltraEditInfo, new RecordItemIndex(0));
            Validate.Exists(repo.UltraEdit.UltraEditInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'UltraEdit.ButtonYes' at 54;14.", repo.UltraEdit.ButtonYesInfo, new RecordItemIndex(1));
            repo.UltraEdit.ButtonYes.Click("54;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Uedit64.EncryptText' at 243;11.", repo.Uedit64.EncryptTextInfo, new RecordItemIndex(2));
            repo.Uedit64.EncryptText.Click("243;11");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EncryptText' with focus on 'Uedit64.EncryptText'.", repo.Uedit64.EncryptTextInfo, new RecordItemIndex(3));
            repo.Uedit64.EncryptText.PressKeys(EncryptText);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Enter}' with focus on 'Uedit64.EncryptText'.", repo.Uedit64.EncryptTextInfo, new RecordItemIndex(4));
            repo.Uedit64.EncryptText.PressKeys("{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "File is decrypted and now legible to open.", new RecordItemIndex(5));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.UltraEdit64Bit.editorScreen, false, new RecordItemIndex(6));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
